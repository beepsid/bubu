{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as Font from 'expo-font';\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport SlapCounterScreen from \"./src/screens/SlapCounterScreen\";\nimport PeriodPlannerScreen from \"./src/screens/PeriodPlannerScreen\";\nimport DiaryScreen from \"./src/screens/DiaryScreen\";\nimport PoemsScreen from \"./src/screens/PoemsScreen\";\nimport GalleryScreen from \"./src/screens/GalleryScreen\";\nimport { initializeDatabase } from \"./src/services/database\";\nimport { seedInitialData } from \"./src/services/dataSeeder\";\nimport { theme } from \"./src/styles/theme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nSplashScreen.preventAutoHideAsync();\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isReady = _useState2[0],\n    setIsReady = _useState2[1];\n  useEffect(function () {\n    function prepare() {\n      return _prepare.apply(this, arguments);\n    }\n    function _prepare() {\n      _prepare = _asyncToGenerator(function* () {\n        try {\n          yield initializeDatabase();\n          yield seedInitialData();\n          yield new Promise(function (resolve) {\n            return setTimeout(resolve, 2000);\n          });\n        } catch (e) {\n          console.warn(e);\n        } finally {\n          setIsReady(true);\n        }\n      });\n      return _prepare.apply(this, arguments);\n    }\n    prepare();\n  }, []);\n  var onLayoutRootView = React.useCallback(_asyncToGenerator(function* () {\n    if (isReady) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [isReady]);\n  if (!isReady) {\n    return null;\n  }\n  return _jsxs(NavigationContainer, {\n    onReady: onLayoutRootView,\n    children: [_jsx(StatusBar, {\n      barStyle: \"dark-content\",\n      backgroundColor: theme.colors.background\n    }), _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref2) {\n        var route = _ref2.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var focused = _ref3.focused,\n              color = _ref3.color,\n              size = _ref3.size;\n            var iconName;\n            switch (route.name) {\n              case 'Home':\n                iconName = focused ? 'heart' : 'heart-outline';\n                break;\n              case 'Counter':\n                iconName = focused ? 'hand-left' : 'hand-left-outline';\n                break;\n              case 'Period':\n                iconName = focused ? 'calendar' : 'calendar-outline';\n                break;\n              case 'Diary':\n                iconName = focused ? 'book' : 'book-outline';\n                break;\n              case 'Poems':\n                iconName = focused ? 'library' : 'library-outline';\n                break;\n              case 'Gallery':\n                iconName = focused ? 'images' : 'images-outline';\n                break;\n              default:\n                iconName = 'heart-outline';\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: theme.colors.primary,\n          tabBarInactiveTintColor: theme.colors.textSecondary,\n          tabBarStyle: {\n            backgroundColor: theme.colors.surface,\n            borderTopColor: theme.colors.primary,\n            borderTopWidth: 1,\n            paddingTop: 8,\n            paddingBottom: 8,\n            height: 70\n          },\n          tabBarLabelStyle: {\n            fontSize: 12,\n            fontFamily: theme.fonts.medium,\n            marginTop: 4\n          },\n          headerStyle: {\n            backgroundColor: theme.colors.surface,\n            borderBottomColor: theme.colors.primary,\n            borderBottomWidth: 1\n          },\n          headerTitleStyle: {\n            fontFamily: theme.fonts.elegant,\n            fontSize: theme.fontSizes.xl,\n            color: theme.colors.text\n          },\n          headerTintColor: theme.colors.primary\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: 'Bubu ðŸ’•'\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Counter\",\n        component: SlapCounterScreen,\n        options: {\n          title: 'Slaps'\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Period\",\n        component: PeriodPlannerScreen,\n        options: {\n          title: 'Calendar'\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Diary\",\n        component: DiaryScreen,\n        options: {\n          title: 'His Diary'\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Poems\",\n        component: PoemsScreen,\n        options: {\n          title: 'Poems'\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Gallery\",\n        component: GalleryScreen,\n        options: {\n          title: 'Photos'\n        }\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","StatusBar","NavigationContainer","createBottomTabNavigator","Ionicons","SplashScreen","Font","HomeScreen","SlapCounterScreen","PeriodPlannerScreen","DiaryScreen","PoemsScreen","GalleryScreen","initializeDatabase","seedInitialData","theme","jsx","_jsx","jsxs","_jsxs","Tab","preventAutoHideAsync","App","_useState","_useState2","_slicedToArray","isReady","setIsReady","prepare","_prepare","apply","arguments","_asyncToGenerator","Promise","resolve","setTimeout","e","console","warn","onLayoutRootView","useCallback","hideAsync","onReady","children","barStyle","backgroundColor","colors","background","Navigator","screenOptions","_ref2","route","tabBarIcon","_ref3","focused","color","size","iconName","name","tabBarActiveTintColor","primary","tabBarInactiveTintColor","textSecondary","tabBarStyle","surface","borderTopColor","borderTopWidth","paddingTop","paddingBottom","height","tabBarLabelStyle","fontSize","fontFamily","fonts","medium","marginTop","headerStyle","borderBottomColor","borderBottomWidth","headerTitleStyle","elegant","fontSizes","xl","text","headerTintColor","Screen","component","options","title"],"sources":["C:/study/github/projects/bubu/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StatusBar } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as Font from 'expo-font';\r\n\r\n// Screens\r\nimport HomeScreen from './src/screens/HomeScreen';\r\nimport SlapCounterScreen from './src/screens/SlapCounterScreen';\r\nimport PeriodPlannerScreen from './src/screens/PeriodPlannerScreen';\r\nimport DiaryScreen from './src/screens/DiaryScreen';\r\nimport PoemsScreen from './src/screens/PoemsScreen';\r\nimport GalleryScreen from './src/screens/GalleryScreen';\r\n\r\n// Services\r\nimport { initializeDatabase } from './src/services/database';\r\nimport { seedInitialData } from './src/services/dataSeeder';\r\n\r\n// Theme\r\nimport { theme } from './src/styles/theme';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\n// Keep splash screen visible while loading\r\nSplashScreen.preventAutoHideAsync();\r\n\r\nexport default function App() {\r\n  const [isReady, setIsReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function prepare() {\r\n      try {\r\n        // Load fonts (skip for now to avoid errors)\r\n        // await Font.loadAsync({\r\n        //   'Inter_400Regular': require('./assets/fonts/Inter-Regular.ttf'),\r\n        //   'Inter_500Medium': require('./assets/fonts/Inter-Medium.ttf'),\r\n        //   'Inter_600SemiBold': require('./assets/fonts/Inter-SemiBold.ttf'),\r\n        //   'Inter_700Bold': require('./assets/fonts/Inter-Bold.ttf'),\r\n        // });\r\n\r\n        // Initialize database\r\n        await initializeDatabase();\r\n        \r\n        // Seed initial data\r\n        await seedInitialData();\r\n        \r\n        // Artificial delay for splash screen (optional)\r\n        await new Promise(resolve => setTimeout(resolve, 2000));\r\n      } catch (e) {\r\n        console.warn(e);\r\n      } finally {\r\n        setIsReady(true);\r\n      }\r\n    }\r\n\r\n    prepare();\r\n  }, []);\r\n\r\n  const onLayoutRootView = React.useCallback(async () => {\r\n    if (isReady) {\r\n      await SplashScreen.hideAsync();\r\n    }\r\n  }, [isReady]);\r\n\r\n  if (!isReady) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer onReady={onLayoutRootView}>\r\n      <StatusBar barStyle=\"dark-content\" backgroundColor={theme.colors.background} />\r\n      <Tab.Navigator\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n\r\n            switch (route.name) {\r\n              case 'Home':\r\n                iconName = focused ? 'heart' : 'heart-outline';\r\n                break;\r\n              case 'Counter':\r\n                iconName = focused ? 'hand-left' : 'hand-left-outline';\r\n                break;\r\n              case 'Period':\r\n                iconName = focused ? 'calendar' : 'calendar-outline';\r\n                break;\r\n              case 'Diary':\r\n                iconName = focused ? 'book' : 'book-outline';\r\n                break;\r\n              case 'Poems':\r\n                iconName = focused ? 'library' : 'library-outline';\r\n                break;\r\n              case 'Gallery':\r\n                iconName = focused ? 'images' : 'images-outline';\r\n                break;\r\n              default:\r\n                iconName = 'heart-outline';\r\n            }\r\n\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n          tabBarActiveTintColor: theme.colors.primary,\r\n          tabBarInactiveTintColor: theme.colors.textSecondary,\r\n          tabBarStyle: {\r\n            backgroundColor: theme.colors.surface,\r\n            borderTopColor: theme.colors.primary,\r\n            borderTopWidth: 1,\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n            height: 70,\r\n          },\r\n          tabBarLabelStyle: {\r\n            fontSize: 12,\r\n            fontFamily: theme.fonts.medium,\r\n            marginTop: 4,\r\n          },\r\n          headerStyle: {\r\n            backgroundColor: theme.colors.surface,\r\n            borderBottomColor: theme.colors.primary,\r\n            borderBottomWidth: 1,\r\n          },\r\n          headerTitleStyle: {\r\n            fontFamily: theme.fonts.elegant,\r\n            fontSize: theme.fontSizes.xl,\r\n            color: theme.colors.text,\r\n          },\r\n          headerTintColor: theme.colors.primary,\r\n        })}\r\n      >\r\n        <Tab.Screen \r\n          name=\"Home\" \r\n          component={HomeScreen}\r\n          options={{ title: 'Bubu ðŸ’•' }}\r\n        />\r\n        <Tab.Screen \r\n          name=\"Counter\" \r\n          component={SlapCounterScreen}\r\n          options={{ title: 'Slaps' }}\r\n        />\r\n        <Tab.Screen \r\n          name=\"Period\" \r\n          component={PeriodPlannerScreen}\r\n          options={{ title: 'Calendar' }}\r\n        />\r\n        <Tab.Screen \r\n          name=\"Diary\" \r\n          component={DiaryScreen}\r\n          options={{ title: 'His Diary' }}\r\n        />\r\n        <Tab.Screen \r\n          name=\"Poems\" \r\n          component={PoemsScreen}\r\n          options={{ title: 'Poems' }}\r\n        />\r\n        <Tab.Screen \r\n          name=\"Gallery\" \r\n          component={GalleryScreen}\r\n          options={{ title: 'Photos' }}\r\n        />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}