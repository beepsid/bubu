{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Ionicons } from '@expo/vector-icons';\nimport * as Haptics from 'expo-haptics';\nimport { theme } from \"../styles/theme\";\nimport { commonStyles } from \"../styles/common\";\nimport { getSlapCount, incrementSlapCount } from \"../services/storage\";\nimport { incrementAndSyncSlapCount, syncSlapCount, testGoogleSheetsConnection } from \"../services/googleSheets\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nexport default function SlapCounterScreen() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    slapCount = _useState2[0],\n    setSlapCount = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isOnline = _useState4[0],\n    setIsOnline = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    lastSync = _useState6[0],\n    setLastSync = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    secretTapCount = _useState8[0],\n    setSecretTapCount = _useState8[1];\n  var countAnimation = useRef(new Animated.Value(1)).current;\n  var heartAnimations = useRef([]).current;\n  var _useState9 = useState([]),\n    _useState0 = _slicedToArray(_useState9, 2),\n    floatingHearts = _useState0[0],\n    setFloatingHearts = _useState0[1];\n  useEffect(function () {\n    loadSlapCount();\n    checkOnlineStatus();\n    var timer = setTimeout(function () {\n      setSecretTapCount(0);\n    }, 3000);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [secretTapCount]);\n  var loadSlapCount = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var count = yield getSlapCount();\n        setSlapCount(count);\n        var syncedCount = yield syncSlapCount();\n        if (syncedCount !== count) {\n          setSlapCount(syncedCount);\n        }\n      } catch (error) {\n        console.error('Error loading slap count:', error);\n      }\n    });\n    return function loadSlapCount() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var checkOnlineStatus = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var online = yield testGoogleSheetsConnection();\n      setIsOnline(online);\n    });\n    return function checkOnlineStatus() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleSecretTap = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var newTapCount = secretTapCount + 1;\n      setSecretTapCount(newTapCount);\n      if (newTapCount === 5) {\n        Alert.alert(\"Secret Admin Mode üîê\", \"You found the secret! This is where you can increment the slap counter.\", [{\n          text: \"Cancel\",\n          style: \"cancel\"\n        }, {\n          text: \"Add Slap +1\",\n          onPress: handleSecretIncrement\n        }]);\n        setSecretTapCount(0);\n      }\n    });\n    return function handleSecretTap() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleSecretIncrement = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        yield Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium);\n        var newCount = yield incrementAndSyncSlapCount();\n        setSlapCount(newCount);\n        animateCounterIncrement();\n        createFloatingHearts();\n        checkOnlineStatus();\n      } catch (error) {\n        console.error('Error incrementing slap count:', error);\n        Alert.alert('Error', 'Failed to increment slap count. Please try again.');\n      }\n    });\n    return function handleSecretIncrement() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var animateCounterIncrement = function animateCounterIncrement() {\n    Animated.sequence([Animated.timing(countAnimation, {\n      toValue: 1.3,\n      duration: 200,\n      useNativeDriver: true\n    }), Animated.timing(countAnimation, {\n      toValue: 1,\n      duration: 200,\n      useNativeDriver: true\n    })]).start();\n  };\n  var createFloatingHearts = function createFloatingHearts() {\n    var newHearts = [];\n    var _loop = function _loop() {\n      var heartId = Date.now() + i;\n      var startX = Math.random() * (width - 50);\n      var animatedValue = new Animated.Value(0);\n      newHearts.push({\n        id: heartId,\n        x: startX,\n        animation: animatedValue\n      });\n      Animated.timing(animatedValue, {\n        toValue: 1,\n        duration: 2000,\n        useNativeDriver: true\n      }).start(function () {\n        setFloatingHearts(function (prev) {\n          return prev.filter(function (heart) {\n            return heart.id !== heartId;\n          });\n        });\n      });\n    };\n    for (var i = 0; i < 5; i++) {\n      _loop();\n    }\n    setFloatingHearts(function (prev) {\n      return [].concat(_toConsumableArray(prev), newHearts);\n    });\n  };\n  var handleSyncPress = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        yield Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n        var syncedCount = yield syncSlapCount();\n        setSlapCount(syncedCount);\n        checkOnlineStatus();\n        setLastSync(new Date().toLocaleTimeString());\n      } catch (error) {\n        Alert.alert('Sync Error', 'Failed to sync with Google Sheets. Check your internet connection.');\n      }\n    });\n    return function handleSyncPress() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  return _jsxs(LinearGradient, {\n    colors: [theme.colors.background, theme.colors.romantic],\n    style: commonStyles.container,\n    children: [_jsxs(View, {\n      style: commonStyles.centerContainer,\n      children: [_jsxs(View, {\n        style: [commonStyles.card, {\n          position: 'absolute',\n          top: 50,\n          right: 20,\n          padding: theme.spacing.sm\n        }],\n        children: [_jsxs(View, {\n          style: commonStyles.row,\n          children: [_jsx(Ionicons, {\n            name: isOnline ? \"cloud-done\" : \"cloud-offline\",\n            size: 16,\n            color: isOnline ? theme.colors.success : theme.colors.error\n          }), _jsx(Text, {\n            style: [commonStyles.bodyText, {\n              fontSize: theme.fontSizes.xs,\n              marginLeft: theme.spacing.xs\n            }],\n            children: isOnline ? 'Online' : 'Offline'\n          })]\n        }), lastSync && _jsxs(Text, {\n          style: [commonStyles.bodyText, {\n            fontSize: theme.fontSizes.xs,\n            color: theme.colors.textSecondary\n          }],\n          children: [\"Synced: \", lastSync]\n        })]\n      }), _jsxs(TouchableOpacity, {\n        onPress: handleSecretTap,\n        activeOpacity: 0.8,\n        style: {\n          alignItems: 'center'\n        },\n        children: [_jsx(View, {\n          style: [commonStyles.heartContainer, {\n            width: 120,\n            height: 120,\n            borderRadius: 60,\n            marginBottom: theme.spacing.lg\n          }],\n          children: _jsx(Ionicons, {\n            name: \"heart\",\n            size: 60,\n            color: theme.colors.heart\n          })\n        }), _jsx(Text, {\n          style: [commonStyles.subtitle, {\n            color: theme.colors.textSecondary,\n            marginBottom: theme.spacing.sm\n          }],\n          children: \"Slaps Received\"\n        }), _jsx(Animated.View, {\n          style: {\n            transform: [{\n              scale: countAnimation\n            }]\n          },\n          children: _jsx(Text, {\n            style: [commonStyles.title, {\n              fontSize: 80,\n              color: theme.colors.heart,\n              fontFamily: theme.fonts.elegantBold,\n              textShadowColor: theme.colors.shadow,\n              textShadowOffset: {\n                width: 2,\n                height: 2\n              },\n              textShadowRadius: 4\n            }],\n            children: slapCount\n          })\n        })]\n      }), _jsxs(View, {\n        style: [commonStyles.romanticCard, {\n          marginTop: theme.spacing.xl,\n          alignItems: 'center'\n        }],\n        children: [_jsx(Ionicons, {\n          name: \"hand-left\",\n          size: 32,\n          color: theme.colors.primary\n        }), _jsx(Text, {\n          style: [commonStyles.scriptText, {\n            marginTop: theme.spacing.md,\n            textAlign: 'center'\n          }],\n          children: \"\\\"Each playful slap is a reminder of our silly, loving moments together \\uD83D\\uDC95\\\"\"\n        })]\n      }), _jsxs(View, {\n        style: [commonStyles.card, {\n          marginTop: theme.spacing.lg,\n          alignItems: 'center'\n        }],\n        children: [_jsx(Text, {\n          style: [commonStyles.subtitle, {\n            marginBottom: theme.spacing.md\n          }],\n          children: \"Fun Stats \\uD83D\\uDCCA\"\n        }), _jsxs(View, {\n          style: commonStyles.row,\n          children: [_jsxs(View, {\n            style: {\n              alignItems: 'center',\n              flex: 1\n            },\n            children: [_jsx(Text, {\n              style: [commonStyles.bodyText, {\n                fontFamily: theme.fonts.bold,\n                color: theme.colors.primary\n              }],\n              children: Math.floor(slapCount / 7)\n            }), _jsx(Text, {\n              style: [commonStyles.bodyText, {\n                fontSize: theme.fontSizes.sm,\n                color: theme.colors.textSecondary\n              }],\n              children: \"Weeks of Slaps\"\n            })]\n          }), _jsxs(View, {\n            style: {\n              alignItems: 'center',\n              flex: 1\n            },\n            children: [_jsx(Text, {\n              style: [commonStyles.bodyText, {\n                fontFamily: theme.fonts.bold,\n                color: theme.colors.primary\n              }],\n              children: slapCount * 2\n            }), _jsx(Text, {\n              style: [commonStyles.bodyText, {\n                fontSize: theme.fontSizes.sm,\n                color: theme.colors.textSecondary\n              }],\n              children: \"Kisses Owed\"\n            })]\n          }), _jsxs(View, {\n            style: {\n              alignItems: 'center',\n              flex: 1\n            },\n            children: [_jsx(Text, {\n              style: [commonStyles.bodyText, {\n                fontFamily: theme.fonts.bold,\n                color: theme.colors.primary\n              }],\n              children: \"\\u221E\"\n            }), _jsx(Text, {\n              style: [commonStyles.bodyText, {\n                fontSize: theme.fontSizes.sm,\n                color: theme.colors.textSecondary\n              }],\n              children: \"Love Level\"\n            })]\n          })]\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: [commonStyles.button, {\n          marginTop: theme.spacing.xl,\n          backgroundColor: isOnline ? theme.colors.success : theme.colors.secondary\n        }],\n        onPress: handleSyncPress,\n        children: _jsxs(View, {\n          style: commonStyles.row,\n          children: [_jsx(Ionicons, {\n            name: isOnline ? \"sync\" : \"sync-outline\",\n            size: 20,\n            color: theme.colors.text\n          }), _jsx(Text, {\n            style: [commonStyles.buttonText, {\n              marginLeft: theme.spacing.sm\n            }],\n            children: isOnline ? 'Sync Now' : 'Try Sync'\n          })]\n        })\n      }), secretTapCount > 0 && _jsx(View, {\n        style: {\n          position: 'absolute',\n          bottom: 100,\n          alignItems: 'center'\n        },\n        children: _jsxs(Text, {\n          style: [commonStyles.bodyText, {\n            color: theme.colors.textLight,\n            fontSize: theme.fontSizes.xs\n          }],\n          children: [secretTapCount, \"/5 taps\"]\n        })\n      })]\n    }), floatingHearts.map(function (heart) {\n      return _jsx(Animated.View, {\n        style: {\n          position: 'absolute',\n          left: heart.x,\n          bottom: height / 2,\n          transform: [{\n            translateY: heart.animation.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0, -200]\n            })\n          }, {\n            scale: heart.animation.interpolate({\n              inputRange: [0, 0.5, 1],\n              outputRange: [1, 1.2, 0]\n            })\n          }],\n          opacity: heart.animation.interpolate({\n            inputRange: [0, 0.8, 1],\n            outputRange: [1, 1, 0]\n          })\n        },\n        children: _jsx(Ionicons, {\n          name: \"heart\",\n          size: 24,\n          color: theme.colors.heart\n        })\n      }, heart.id);\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","TouchableOpacity","Animated","Dimensions","Alert","LinearGradient","Ionicons","Haptics","theme","commonStyles","getSlapCount","incrementSlapCount","incrementAndSyncSlapCount","syncSlapCount","testGoogleSheetsConnection","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","SlapCounterScreen","_useState","_useState2","_slicedToArray","slapCount","setSlapCount","_useState3","_useState4","isOnline","setIsOnline","_useState5","_useState6","lastSync","setLastSync","_useState7","_useState8","secretTapCount","setSecretTapCount","countAnimation","Value","current","heartAnimations","_useState9","_useState0","floatingHearts","setFloatingHearts","loadSlapCount","checkOnlineStatus","timer","setTimeout","clearTimeout","_ref","_asyncToGenerator","count","syncedCount","error","console","apply","arguments","_ref2","online","handleSecretTap","_ref3","newTapCount","alert","text","style","onPress","handleSecretIncrement","_ref4","impactAsync","ImpactFeedbackStyle","Medium","newCount","animateCounterIncrement","createFloatingHearts","sequence","timing","toValue","duration","useNativeDriver","start","newHearts","_loop","heartId","Date","now","i","startX","Math","random","animatedValue","push","id","x","animation","prev","filter","heart","concat","_toConsumableArray","handleSyncPress","_ref5","Light","toLocaleTimeString","colors","background","romantic","container","children","centerContainer","card","position","top","right","padding","spacing","sm","row","name","size","color","success","bodyText","fontSize","fontSizes","xs","marginLeft","textSecondary","activeOpacity","alignItems","heartContainer","borderRadius","marginBottom","lg","subtitle","transform","scale","title","fontFamily","fonts","elegantBold","textShadowColor","shadow","textShadowOffset","textShadowRadius","romanticCard","marginTop","xl","primary","scriptText","md","textAlign","flex","bold","floor","button","backgroundColor","secondary","buttonText","bottom","textLight","map","left","translateY","interpolate","inputRange","outputRange","opacity"],"sources":["C:/study/github/projects/bubu/src/screens/SlapCounterScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  Animated,\r\n  Dimensions,\r\n  Alert,\r\n} from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport * as Haptics from 'expo-haptics';\r\n\r\nimport { theme } from '../styles/theme';\r\nimport { commonStyles } from '../styles/common';\r\nimport { getSlapCount, incrementSlapCount } from '../services/storage';\r\nimport { incrementAndSyncSlapCount, syncSlapCount, testGoogleSheetsConnection } from '../services/googleSheets';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nexport default function SlapCounterScreen() {\r\n  const [slapCount, setSlapCount] = useState(0);\r\n  const [isOnline, setIsOnline] = useState(false);\r\n  const [lastSync, setLastSync] = useState(null);\r\n  const [secretTapCount, setSecretTapCount] = useState(0);\r\n  \r\n  // Animations\r\n  const countAnimation = useRef(new Animated.Value(1)).current;\r\n  const heartAnimations = useRef([]).current;\r\n  const [floatingHearts, setFloatingHearts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadSlapCount();\r\n    checkOnlineStatus();\r\n    \r\n    // Reset secret tap count after 3 seconds\r\n    const timer = setTimeout(() => {\r\n      setSecretTapCount(0);\r\n    }, 3000);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, [secretTapCount]);\r\n\r\n  const loadSlapCount = async () => {\r\n    try {\r\n      const count = await getSlapCount();\r\n      setSlapCount(count);\r\n      \r\n      // Try to sync with Google Sheets\r\n      const syncedCount = await syncSlapCount();\r\n      if (syncedCount !== count) {\r\n        setSlapCount(syncedCount);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading slap count:', error);\r\n    }\r\n  };\r\n\r\n  const checkOnlineStatus = async () => {\r\n    const online = await testGoogleSheetsConnection();\r\n    setIsOnline(online);\r\n  };\r\n\r\n  const handleSecretTap = async () => {\r\n    const newTapCount = secretTapCount + 1;\r\n    setSecretTapCount(newTapCount);\r\n    \r\n    // Secret sequence: 5 taps on the heart\r\n    if (newTapCount === 5) {\r\n      Alert.alert(\r\n        \"Secret Admin Mode üîê\",\r\n        \"You found the secret! This is where you can increment the slap counter.\",\r\n        [\r\n          { text: \"Cancel\", style: \"cancel\" },\r\n          { text: \"Add Slap +1\", onPress: handleSecretIncrement },\r\n        ]\r\n      );\r\n      setSecretTapCount(0);\r\n    }\r\n  };\r\n\r\n  const handleSecretIncrement = async () => {\r\n    try {\r\n      // Haptic feedback\r\n      await Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium);\r\n      \r\n      // Increment count\r\n      const newCount = await incrementAndSyncSlapCount();\r\n      setSlapCount(newCount);\r\n      \r\n      // Animate the counter\r\n      animateCounterIncrement();\r\n      \r\n      // Create floating hearts\r\n      createFloatingHearts();\r\n      \r\n      // Check sync status\r\n      checkOnlineStatus();\r\n      \r\n    } catch (error) {\r\n      console.error('Error incrementing slap count:', error);\r\n      Alert.alert('Error', 'Failed to increment slap count. Please try again.');\r\n    }\r\n  };\r\n\r\n  const animateCounterIncrement = () => {\r\n    Animated.sequence([\r\n      Animated.timing(countAnimation, {\r\n        toValue: 1.3,\r\n        duration: 200,\r\n        useNativeDriver: true,\r\n      }),\r\n      Animated.timing(countAnimation, {\r\n        toValue: 1,\r\n        duration: 200,\r\n        useNativeDriver: true,\r\n      }),\r\n    ]).start();\r\n  };\r\n\r\n  const createFloatingHearts = () => {\r\n    const newHearts = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      const heartId = Date.now() + i;\r\n      const startX = Math.random() * (width - 50);\r\n      const animatedValue = new Animated.Value(0);\r\n      \r\n      newHearts.push({\r\n        id: heartId,\r\n        x: startX,\r\n        animation: animatedValue,\r\n      });\r\n      \r\n      // Animate heart floating up\r\n      Animated.timing(animatedValue, {\r\n        toValue: 1,\r\n        duration: 2000,\r\n        useNativeDriver: true,\r\n      }).start(() => {\r\n        // Remove heart after animation\r\n        setFloatingHearts(prev => prev.filter(heart => heart.id !== heartId));\r\n      });\r\n    }\r\n    \r\n    setFloatingHearts(prev => [...prev, ...newHearts]);\r\n  };\r\n\r\n  const handleSyncPress = async () => {\r\n    try {\r\n      await Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\r\n      const syncedCount = await syncSlapCount();\r\n      setSlapCount(syncedCount);\r\n      checkOnlineStatus();\r\n      setLastSync(new Date().toLocaleTimeString());\r\n    } catch (error) {\r\n      Alert.alert('Sync Error', 'Failed to sync with Google Sheets. Check your internet connection.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LinearGradient\r\n      colors={[theme.colors.background, theme.colors.romantic]}\r\n      style={commonStyles.container}\r\n    >\r\n      <View style={commonStyles.centerContainer}>\r\n        \r\n        {/* Sync Status */}\r\n        <View style={[commonStyles.card, { position: 'absolute', top: 50, right: 20, padding: theme.spacing.sm }]}>\r\n          <View style={commonStyles.row}>\r\n            <Ionicons \r\n              name={isOnline ? \"cloud-done\" : \"cloud-offline\"} \r\n              size={16} \r\n              color={isOnline ? theme.colors.success : theme.colors.error} \r\n            />\r\n            <Text style={[commonStyles.bodyText, { fontSize: theme.fontSizes.xs, marginLeft: theme.spacing.xs }]}>\r\n              {isOnline ? 'Online' : 'Offline'}\r\n            </Text>\r\n          </View>\r\n          {lastSync && (\r\n            <Text style={[commonStyles.bodyText, { fontSize: theme.fontSizes.xs, color: theme.colors.textSecondary }]}>\r\n              Synced: {lastSync}\r\n            </Text>\r\n          )}\r\n        </View>\r\n\r\n        {/* Main Counter Display */}\r\n        <TouchableOpacity\r\n          onPress={handleSecretTap}\r\n          activeOpacity={0.8}\r\n          style={{ alignItems: 'center' }}\r\n        >\r\n          <View style={[commonStyles.heartContainer, { width: 120, height: 120, borderRadius: 60, marginBottom: theme.spacing.lg }]}>\r\n            <Ionicons name=\"heart\" size={60} color={theme.colors.heart} />\r\n          </View>\r\n          \r\n          <Text style={[commonStyles.subtitle, { color: theme.colors.textSecondary, marginBottom: theme.spacing.sm }]}>\r\n            Slaps Received\r\n          </Text>\r\n          \r\n          <Animated.View style={{ transform: [{ scale: countAnimation }] }}>\r\n            <Text style={[\r\n              commonStyles.title, \r\n              { \r\n                fontSize: 80, \r\n                color: theme.colors.heart,\r\n                fontFamily: theme.fonts.elegantBold,\r\n                textShadowColor: theme.colors.shadow,\r\n                textShadowOffset: { width: 2, height: 2 },\r\n                textShadowRadius: 4,\r\n              }\r\n            ]}>\r\n              {slapCount}\r\n            </Text>\r\n          </Animated.View>\r\n        </TouchableOpacity>\r\n\r\n        {/* Romantic Message */}\r\n        <View style={[commonStyles.romanticCard, { marginTop: theme.spacing.xl, alignItems: 'center' }]}>\r\n          <Ionicons name=\"hand-left\" size={32} color={theme.colors.primary} />\r\n          <Text style={[commonStyles.scriptText, { marginTop: theme.spacing.md, textAlign: 'center' }]}>\r\n            \"Each playful slap is a reminder of our silly, loving moments together üíï\"\r\n          </Text>\r\n        </View>\r\n\r\n        {/* Fun Stats */}\r\n        <View style={[commonStyles.card, { marginTop: theme.spacing.lg, alignItems: 'center' }]}>\r\n          <Text style={[commonStyles.subtitle, { marginBottom: theme.spacing.md }]}>\r\n            Fun Stats üìä\r\n          </Text>\r\n          \r\n          <View style={commonStyles.row}>\r\n            <View style={{ alignItems: 'center', flex: 1 }}>\r\n              <Text style={[commonStyles.bodyText, { fontFamily: theme.fonts.bold, color: theme.colors.primary }]}>\r\n                {Math.floor(slapCount / 7)}\r\n              </Text>\r\n              <Text style={[commonStyles.bodyText, { fontSize: theme.fontSizes.sm, color: theme.colors.textSecondary }]}>\r\n                Weeks of Slaps\r\n              </Text>\r\n            </View>\r\n            \r\n            <View style={{ alignItems: 'center', flex: 1 }}>\r\n              <Text style={[commonStyles.bodyText, { fontFamily: theme.fonts.bold, color: theme.colors.primary }]}>\r\n                {slapCount * 2}\r\n              </Text>\r\n              <Text style={[commonStyles.bodyText, { fontSize: theme.fontSizes.sm, color: theme.colors.textSecondary }]}>\r\n                Kisses Owed\r\n              </Text>\r\n            </View>\r\n            \r\n            <View style={{ alignItems: 'center', flex: 1 }}>\r\n              <Text style={[commonStyles.bodyText, { fontFamily: theme.fonts.bold, color: theme.colors.primary }]}>\r\n                ‚àû\r\n              </Text>\r\n              <Text style={[commonStyles.bodyText, { fontSize: theme.fontSizes.sm, color: theme.colors.textSecondary }]}>\r\n                Love Level\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        {/* Sync Button */}\r\n        <TouchableOpacity\r\n          style={[\r\n            commonStyles.button,\r\n            { \r\n              marginTop: theme.spacing.xl,\r\n              backgroundColor: isOnline ? theme.colors.success : theme.colors.secondary,\r\n            }\r\n          ]}\r\n          onPress={handleSyncPress}\r\n        >\r\n          <View style={commonStyles.row}>\r\n            <Ionicons \r\n              name={isOnline ? \"sync\" : \"sync-outline\"} \r\n              size={20} \r\n              color={theme.colors.text} \r\n            />\r\n            <Text style={[commonStyles.buttonText, { marginLeft: theme.spacing.sm }]}>\r\n              {isOnline ? 'Sync Now' : 'Try Sync'}\r\n            </Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n\r\n        {/* Secret Tap Indicator */}\r\n        {secretTapCount > 0 && (\r\n          <View style={{ position: 'absolute', bottom: 100, alignItems: 'center' }}>\r\n            <Text style={[commonStyles.bodyText, { color: theme.colors.textLight, fontSize: theme.fontSizes.xs }]}>\r\n              {secretTapCount}/5 taps\r\n            </Text>\r\n          </View>\r\n        )}\r\n\r\n      </View>\r\n\r\n      {/* Floating Hearts */}\r\n      {floatingHearts.map((heart) => (\r\n        <Animated.View\r\n          key={heart.id}\r\n          style={{\r\n            position: 'absolute',\r\n            left: heart.x,\r\n            bottom: height / 2,\r\n            transform: [\r\n              {\r\n                translateY: heart.animation.interpolate({\r\n                  inputRange: [0, 1],\r\n                  outputRange: [0, -200],\r\n                }),\r\n              },\r\n              {\r\n                scale: heart.animation.interpolate({\r\n                  inputRange: [0, 0.5, 1],\r\n                  outputRange: [1, 1.2, 0],\r\n                }),\r\n              },\r\n            ],\r\n            opacity: heart.animation.interpolate({\r\n              inputRange: [0, 0.8, 1],\r\n              outputRange: [1, 1, 0],\r\n            }),\r\n          }}\r\n        >\r\n          <Ionicons name=\"heart\" size={24} color={theme.colors.heart} />\r\n        </Animated.View>\r\n      ))}\r\n    </LinearGradient>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}